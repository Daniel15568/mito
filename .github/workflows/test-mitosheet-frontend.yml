name: Test - mitosheet frontend

on:
  push:
    branches: [ dev ]
    paths:
      - 'mitosheet/**'
  pull_request:
    paths:
      - 'mitosheet/**'
      - 'tests/**'

jobs:
  test-mitosheet-frontend:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.6', '3.8', '3.10']

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.7.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          mitosheet/setup.py
          tests/requirements.txt
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
        cache-dependency-path: mitosheet/package-lock.json
    - name: Install dependencies
      run: |
        cd tests
        bash mac-setup.sh
    - name: Setup JupyterLab
      run: |
        cd tests
        source venv/bin/activate
        jupyter labextension develop . --overwrite
    - name: Start a server and run tests
      run: |
        cd tests
        source venv/bin/activate
        jupyter lab --config jupyter_server_test_config.py &
        npm run test:jupyterlab
    - name: Upload test-results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: jupyterlab-playwright-report
        path: tests/playwright-report/
        retention-days: 14

  test-mitosheet-frontend-streamlit:
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.10']
        project: ['chromium', 'firefox', 'webkit', 'Google Chrome', 'Microsoft Edge']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        exclude:
          - project: 'webkit'
            os: 'windows-latest'
          - project: 'Microsoft Edge'
            os: 'macos-latest'
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          mitosheet/setup.py
          tests/requirements.txt
          tests/extra-requirements.txt
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
        cache-dependency-path: mitosheet/package-lock.json
    - name: Install dependencies (ubuntu, macos)
      if: matrix.os != 'windows-latest'
      run: |
        cd tests
        bash mac-setup.sh
        source venv/bin/activate
        pip install -r extra-requirements.txt
    - name: Install dependencies (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd tests
        cmd /c windows-setup.bat
        cmd /c venv\Scripts/activate.bat
        pip install -r extra-requirements.txt
    - name: Start a server and run tests (ubuntu, macos)
      if: matrix.os != 'windows-latest'
      run: |
        cd tests
        source venv/bin/activate
        streamlit run streamlit-test.py --server.port 8555 &
        npm run test:streamlit -- --project="${{ matrix.project }}"
    - name: Start a server and run tests (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd tests
        cmd /c venv\Scripts\activate.bat
        streamlit run streamlit-test.py --server.port 8555 &
        npm run test:streamlit -- --project="${{ matrix.project }}"
    - name: Upload test-results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: streamlit-playwright-report
        path: tests/playwright-report/
        retention-days: 14

  test-mitosheet-frontend-dash:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.7.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          mitosheet/setup.py
          tests/requirements.txt
          tests/extra-requirements.txt
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
        cache-dependency-path: mitosheet/package-lock.json
    - name: Install dependencies
      run: |
        cd tests
        bash mac-setup.sh
        source venv/bin/activate
        pip install -r extra-requirements.txt
    - name: Start a server and run tests
      run: |
        cd tests
        source venv/bin/activate
        python dash-test.py &
        npm run test:dash