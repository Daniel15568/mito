name: Deploy mitosheet-private
on: 
  workflow_dispatch:
    inputs:
      version:
        description: "Package version to deploy to. Go to pypi and add 1 to the previous version of mitosheet-private"
        required: true

jobs:
  deploy-mitosheet-private:
    name: Deploy mitosheet-private
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Auth for PyPi
        run: |
          echo -e "[distutils]" >> ~/.pypirc
          echo -e "index-servers =" >> ~/.pypirc
          echo -e "    pypi" >> ~/.pypirc
          echo -e "    testpypi" >> ~/.pypirc
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "repository = https://pypi.python.org/pypi" >> ~/.pypirc
          echo -e "username = __token__" >> ~/.pypirc
          echo -e "password = ${{ secrets.PYPI_API_TOKEN }}" >> ~/.pypirc
          echo -e "" >> ~/.pypirc
          echo -e "[testpypi]" >> ~/.pypirc
          echo -e "repository = https://test.pypi.org/legacy/" >> ~/.pypirc
          echo -e "username = __token__" >> ~/.pypirc
          echo -e "password = ${{ secrets.TEST_PYPI_API_TOKEN }}" >> ~/.pypirc
      - name: Setup mitosheet
        run: |
          cd mitosheet
          rm -rf venv
          python3 -m venv venv
          source venv/bin/activate
          python switch.py mitosheet-private
          python ../deployment/bump_version.py mitosheet-private ${{ steps.extract_branch.outputs.branch }} ${{ github.event.inputs.version }}
          python -m pip install -e ".[test, deploy]"          
      - name: Deploy mitosheet
        run: |
          cd mitosheet
          source venv/bin/activate
          python ../deployment/deploy.py ${{ steps.extract_branch.outputs.branch }}